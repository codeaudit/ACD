import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        languages = [
            "English", "Mandarin", "Spanish", "Arabic",
            "Russian", "Japanese", "French", "German"
        ]
        abstract_concepts = [
            "time", "love", "justice", "freedom",
            "consciousness", "infinity", "chaos", "harmony"
        ]
        tasks = {}
        for i in range(2):
            tasks[str(i+1)] = {
                "language1": random.choice(languages),
                "language2": random.choice(languages),
                "abstract_concept": random.choice(abstract_concepts)
            }
            while tasks[str(i+1)]["language1"] == tasks[str(i+1)]["language2"]:
                tasks[str(i+1)]["language2"] = random.choice(languages)
        return tasks

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a quantum-inspired language model that mimics the brain's semantic processing, then use it to generate and analyze metaphorical expressions for the abstract concept of {t['abstract_concept']} in {t['language1']} and {t['language2']}. Your response should include:

1. Quantum-Inspired Language Model Architecture (300-350 words):
   a) Describe the key components of your quantum-inspired language model.
   b) Explain how your model incorporates principles from quantum computing (e.g., superposition, entanglement) to represent semantic information.
   c) Detail how your model mimics the brain's semantic processing, drawing on current neuroscientific understanding.
   d) Discuss how your model integrates linguistic features from multiple languages.
   e) Include a diagram or flowchart illustrating the architecture of your model (describe it textually).

2. Semantic Processing Mechanism (250-300 words):
   a) Explain the step-by-step process of how your model processes and generates semantic information.
   b) Describe how your model handles ambiguity and context-dependence in meaning.
   c) Discuss how your model accounts for cultural and linguistic differences in semantic representations.

3. Metaphor Generation and Analysis (250-300 words):
   a) Describe how your model generates metaphorical expressions for the concept of {t['abstract_concept']} in {t['language1']} and {t['language2']}.
   b) Provide two example metaphors for {t['abstract_concept']} in each language, generated by your model.
   c) Analyze the similarities and differences between the generated metaphors, considering linguistic and cultural factors.
   d) Explain how your model's quantum-inspired architecture contributes to creative and cross-lingual metaphor generation.

4. Evaluation and Validation (200-250 words):
   a) Propose methods to evaluate the semantic accuracy and cultural authenticity of your model's outputs.
   b) Describe how you would compare your model's performance to traditional language models and human performance.
   c) Discuss potential experiments to validate the quantum-inspired aspects of your model.

5. Neuroscientific Implications (200-250 words):
   a) Analyze how your model's performance might inform our understanding of the brain's semantic processing.
   b) Discuss potential insights into the relationship between quantum processes and cognitive functions.
   c) Propose a neuroscientific experiment to test predictions made by your model about semantic processing in the brain.

6. Ethical Considerations and Future Directions (150-200 words):
   a) Identify potential ethical concerns or risks associated with quantum-inspired language models.
   b) Discuss the implications of your model for machine translation and cross-cultural communication.
   c) Propose two future research directions to extend or improve your model.

Ensure your response demonstrates a deep understanding of quantum computing, cognitive neuroscience, and linguistics. Use appropriate technical terminology and provide clear explanations for complex concepts. Be innovative in your approach while maintaining scientific plausibility.

Format your answer with clear headings for each section, numbered as above. Your total response should be between 1350-1650 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response accurately addresses the abstract concept of {t['abstract_concept']}.",
            f"The model effectively generates and analyzes metaphors in {t['language1']} and {t['language2']}.",
            "The proposed quantum-inspired language model demonstrates a plausible integration of quantum computing, neuroscience, and linguistics.",
            "The response shows a deep understanding of semantic processing and metaphor generation across languages.",
            "The ethical considerations and future directions are thoroughly discussed."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
