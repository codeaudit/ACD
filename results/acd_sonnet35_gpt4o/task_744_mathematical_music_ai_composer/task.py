import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        mathematical_principles = [
            {
                'principle': 'Fibonacci sequence',
                'musical_element': 'Rhythm',
                'genre': 'Minimalist composition'
            },
            {
                'principle': 'Fractal geometry',
                'musical_element': 'Melody',
                'genre': 'Ambient electronic'
            }
        ]
        return {str(i+1): principle for i, principle in enumerate(mathematical_principles)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system that generates music based on the following parameters:

Mathematical Principle: {t['principle']}
Musical Element: {t['musical_element']}
Genre: {t['genre']}

Your task is to:

1. System Design (300-350 words):
   a) Describe the architecture of your AI system, including its main components and how they interact.
   b) Explain how you incorporate the given mathematical principle into the music generation process.
   c) Detail how your system handles the specified musical element and genre.
   d) Discuss any novel algorithms or techniques you've developed for this system.

2. Music Generation Process (200-250 words):
   a) Provide a step-by-step explanation of how your AI system would generate a piece of music.
   b) Include at least one mathematical formula or algorithm used in the process.
   c) Explain how you ensure the output adheres to the specified genre while maintaining mathematical integrity.

3. Output Analysis (200-250 words):
   a) Describe the expected characteristics of the music generated by your system.
   b) Analyze how the mathematical principle manifests in the musical output.
   c) Discuss potential strengths and limitations of your approach compared to traditional composition methods.

4. Creativity Evaluation (150-200 words):
   a) Propose a method to evaluate the creativity of your AI system's compositions.
   b) Discuss the challenges in assessing machine creativity in music.
   c) Suggest criteria for distinguishing between mathematical adherence and genuine musical innovation.

5. Experimental Design (200-250 words):
   Propose an experiment to test your AI system's capabilities:
   a) Describe the experimental setup, methodology, and control groups.
   b) Explain how you would measure the system's performance and the quality of its musical output.
   c) Discuss how the results could validate or challenge your approach.

6. Ethical Implications (100-150 words):
   a) Identify potential ethical concerns related to AI-generated music based on mathematical principles.
   b) Discuss the implications for human composers and the music industry.
   c) Propose guidelines for the responsible development and use of such AI systems in music creation.

Ensure your response demonstrates a deep understanding of music theory, mathematics, and artificial intelligence. Use appropriate technical terminology and provide explanations where necessary. Be creative in your approach while maintaining scientific and artistic plausibility.

Your total response should be between 1150-1450 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a deep understanding of the intersection between music theory, mathematics, and AI",
            "The system design effectively incorporates the given mathematical principle into music generation",
            "The music generation process is clearly explained and includes at least one relevant mathematical formula or algorithm",
            "The output analysis shows insight into the relationship between the mathematical principle and musical characteristics",
            "The proposed creativity evaluation method and experimental design are well-thought-out and relevant",
            "Ethical implications are thoroughly considered and addressed",
            "The response adheres to the specified word limit (1150-1450 words)"
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
