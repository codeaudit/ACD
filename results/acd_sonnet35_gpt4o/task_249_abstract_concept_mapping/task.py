import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        abstract_concepts = [
            "justice", "beauty", "freedom", "chaos", "harmony",
            "complexity", "balance", "infinity", "consciousness", "truth"
        ]
        domains = [
            "physics", "biology", "economics", "psychology", "art",
            "music", "mathematics", "social systems", "technology", "ecology"
        ]
        return {
            "1": {
                "concept": random.choice(abstract_concepts),
                "domain1": random.choice(domains),
                "domain2": random.choice(domains)
            },
            "2": {
                "concept": random.choice(abstract_concepts),
                "domain1": random.choice(domains),
                "domain2": random.choice(domains)
            }
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a cognitive mapping system for the abstract concept of '{t['concept']}' across the domains of {t['domain1']} and {t['domain2']}. Your response should include:

1. Conceptual Framework (200-250 words):
   a) Explain how the concept of '{t['concept']}' can be understood in both {t['domain1']} and {t['domain2']}.
   b) Identify key similarities and differences in how this concept manifests in each domain.
   c) Propose a theoretical framework for mapping this concept across these domains, drawing on principles of cognitive linguistics and conceptual metaphor theory.

2. Mapping System Design (250-300 words):
   a) Design a system or algorithm that can generate mappings of '{t['concept']}' between {t['domain1']} and {t['domain2']}.
   b) Explain the key components and processes of your system.
   c) Describe how your system accounts for context, ambiguity, and cultural variations in concept understanding.

3. Example Mapping (150-200 words):
   a) Provide a detailed example of how your system would map '{t['concept']}' from {t['domain1']} to {t['domain2']}.
   b) Explain the reasoning behind this mapping and any challenges encountered.

4. Evaluation Metrics (200-250 words):
   a) Propose a set of metrics to evaluate the quality and accuracy of the concept mappings generated by your system.
   b) Explain how these metrics could be used to assess an AI's understanding of abstract concepts across domains.
   c) Discuss potential limitations or biases in your evaluation approach.

5. Implications and Applications (150-200 words):
   a) Discuss how this mapping system could enhance AI's capability for abstract reasoning and cross-domain knowledge transfer.
   b) Propose an experiment to test whether exposure to these concept mappings improves an AI's performance on tasks requiring abstract thinking.

Ensure your response demonstrates a deep understanding of cognitive linguistics, conceptual metaphor theory, and the chosen domains. Use clear headings for each section of your response."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response demonstrates a deep understanding of how '{t['concept']}' can be conceptualized in both {t['domain1']} and {t['domain2']}.",
            "The proposed mapping system is innovative, well-explained, and grounded in cognitive linguistics principles.",
            "The example mapping is detailed, logical, and illustrates the system's functionality.",
            "The evaluation metrics are comprehensive and suitable for assessing AI's abstract concept understanding.",
            "The discussion of implications and applications is insightful and proposes a feasible experiment.",
            "The response shows exceptional interdisciplinary reasoning and creativity in addressing the task."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
