import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        quantum_principles = ['superposition', 'entanglement']
        linguistic_features = ['syntax', 'semantics']
        art_styles = ['abstract expressionism', 'cubism']
        
        tasks = [
            {
                'quantum_principle': random.choice(quantum_principles),
                'linguistic_feature': random.choice(linguistic_features),
                'art_style': random.choice(art_styles)
            },
            {
                'quantum_principle': random.choice(quantum_principles),
                'linguistic_feature': random.choice(linguistic_features),
                'art_style': random.choice(art_styles)
            }
        ]
        return {str(i+1): task for i, task in enumerate(tasks)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a quantum computing algorithm that generates visual art based on linguistic input, incorporating the quantum principle of {t['quantum_principle']}, the linguistic feature of {t['linguistic_feature']}, and the art style of {t['art_style']}. Then, analyze its output and implications. Your response should include:

1. Quantum-Linguistic Algorithm Design (300-350 words):
   a) Describe the key components of your quantum algorithm for art generation.
   b) Explain how you incorporate the specified quantum principle into your algorithm.
   c) Discuss how your algorithm processes the given linguistic feature.
   d) Explain how the algorithm translates quantum states and linguistic inputs into visual art elements.
   e) Include a high-level pseudocode or quantum circuit diagram to illustrate your algorithm.

2. Art Generation Process (250-300 words):
   a) Provide a step-by-step explanation of how your algorithm generates art.
   b) Explain how the specified art style is achieved through quantum and linguistic processes.
   c) Discuss how quantum phenomena might lead to unique or unexpected artistic outcomes.
   d) Describe how the algorithm ensures coherence between linguistic input and visual output.

3. Sample Output Analysis (200-250 words):
   a) Describe a hypothetical piece of art generated by your algorithm, given a specific linguistic input.
   b) Analyze how this output demonstrates the influence of the specified quantum principle, linguistic feature, and art style.
   c) Discuss any emergent properties or unexpected features in the generated art.

4. Implications and Applications (200-250 words):
   a) Explore the potential implications of your quantum-linguistic art generator for our understanding of creativity, language, and quantum phenomena.
   b) Discuss possible applications of this technology in fields such as art therapy, language learning, or quantum visualization.
   c) Consider how this intersection of quantum computing, linguistics, and art might lead to new research questions or technological developments.

5. Ethical and Philosophical Considerations (150-200 words):
   a) Discuss the ethical implications of using quantum-generated art in various contexts.
   b) Explore philosophical questions raised by the fusion of quantum processes, language, and artistic creation.
   c) Consider the potential impact on human artists and the nature of creativity.

Ensure your response demonstrates a deep understanding of quantum computing, linguistics, and art theory. Use technical terminology appropriately and provide explanations where necessary. Be innovative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section (e.g., '1. Quantum-Linguistic Algorithm Design:', '2. Art Generation Process:', etc.). Your total response should be between 1100-1350 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response includes a detailed design of a quantum computing algorithm that generates visual art based on linguistic input, incorporating the quantum principle of {t['quantum_principle']}, the linguistic feature of {t['linguistic_feature']}, and the art style of {t['art_style']}.",
            "The algorithm design clearly explains how quantum states and linguistic inputs are translated into visual art elements.",
            "The art generation process is described step-by-step, demonstrating how the specified art style is achieved through quantum and linguistic processes.",
            "A hypothetical piece of art generated by the algorithm is described and analyzed, showing the influence of the specified quantum principle, linguistic feature, and art style.",
            "The response explores potential implications and applications of the quantum-linguistic art generator in relevant fields.",
            "Ethical and philosophical considerations of using quantum-generated art are discussed thoughtfully.",
            "The response is formatted with clear headings for each section and falls within the specified word count range."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
