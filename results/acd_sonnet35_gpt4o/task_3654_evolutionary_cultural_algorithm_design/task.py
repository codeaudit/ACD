import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        complex_systems = [
            'urban traffic flow optimization',
            'ecosystem resilience modeling',
            'financial market stability',
            'social network dynamics',
            'global supply chain management',
            'climate change adaptation strategies'
        ]
        cultural_mechanisms = [
            'social learning',
            'conformity bias',
            'prestige bias',
            'innovation',
            'cultural drift',
            'horizontal transmission'
        ]
        biological_mechanisms = [
            'genetic drift',
            'natural selection',
            'mutation',
            'recombination',
            'gene flow',
            'epigenetic inheritance'
        ]
        constraints = [
            'limited computational resources',
            'real-time adaptation requirement',
            'incomplete information',
            'multi-objective optimization'
        ]
        
        tasks = {}
        for i in range(1, 3):
            tasks[str(i)] = {
                'complex_system': random.choice(complex_systems),
                'cultural_mechanism': random.choice(cultural_mechanisms),
                'biological_mechanism': random.choice(biological_mechanisms),
                'constraint': random.choice(constraints)
            }
        return tasks

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a novel evolutionary algorithm that integrates principles from both biological and cultural evolution to solve a complex adaptive system problem. Your task is to create a detailed proposal for this algorithm and analyze its potential applications. Specifically, address the following complex system, evolutionary mechanisms, and constraint:

Complex System: {t['complex_system']}
Cultural Evolution Mechanism: {t['cultural_mechanism']}
Biological Evolution Mechanism: {t['biological_mechanism']}
Constraint: {t['constraint']}

Your response should include the following sections:

1. Algorithm Design (300-350 words):
   a) Describe the key components and processes of your evolutionary algorithm.
   b) Explain how you integrate the specified cultural and biological evolutionary mechanisms.
   c) Discuss how your algorithm is tailored to address the given complex adaptive system.
   d) Provide a high-level pseudocode or flowchart illustrating your algorithm's main steps.
   e) Explain how your algorithm addresses the specified constraint.

2. Theoretical Foundation (250-300 words):
   a) Explain the relevant principles from biological and cultural evolution theory that inform your algorithm.
   b) Discuss how your algorithm models the interaction between biological and cultural evolutionary processes.
   c) Analyze any novel theoretical insights or hypotheses generated by your integrated approach.

3. Implementation and Optimization (250-300 words):
   a) Describe how you would implement your algorithm computationally.
   b) Explain any data structures or representations unique to your approach.
   c) Discuss potential optimization techniques to improve the algorithm's efficiency.
   d) Address any challenges in scaling the algorithm to handle real-world complex systems.

4. Application to the Complex System (200-250 words):
   a) Provide a detailed example of how your algorithm would be applied to the specified complex adaptive system.
   b) Discuss the expected benefits and potential limitations of your approach for this particular system.
   c) Compare your algorithm's potential performance to traditional methods for addressing this complex system.

5. Broader Implications (200-250 words):
   a) Analyze how your algorithm might contribute to our understanding of the interplay between biological and cultural evolution.
   b) Discuss potential applications of your algorithm to other complex adaptive systems or scientific fields.
   c) Explore any ethical considerations or societal impacts of using such an algorithm for modeling and decision-making.

6. Evaluation and Future Directions (150-200 words):
   a) Propose a method for evaluating the effectiveness and validity of your algorithm.
   b) Suggest two potential improvements or extensions to your algorithm for future research.
   c) Discuss how your approach might adapt to incorporate new findings in evolutionary biology or cultural evolution theory.

7. Case Study (200-250 words):
   Provide a specific case study demonstrating how your algorithm would be applied to solve a real-world problem within the given complex system. Include hypothetical data, expected outcomes, and potential challenges.

Ensure your response demonstrates a deep understanding of evolutionary biology, cultural evolution theory, and complex systems analysis. Use appropriate terminology from these fields and provide clear explanations for complex concepts. Be creative and innovative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section. Include a word count at the end of each section and a total word count at the end of your response. Your total response should be between 1550-1900 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a comprehensive understanding of evolutionary biology, cultural evolution theory, and complex systems analysis.",
            f"The algorithm design effectively integrates the specified cultural mechanism ({t['cultural_mechanism']}) and biological mechanism ({t['biological_mechanism']}).",
            f"The algorithm is well-tailored to address the given complex adaptive system ({t['complex_system']}) and constraint ({t['constraint']}).",
            "The theoretical foundation provides novel insights into the interaction between biological and cultural evolution.",
            "The implementation and optimization section addresses practical aspects of the algorithm's computational realization.",
            "The application to the complex system is detailed and demonstrates potential benefits over traditional methods.",
            "The broader implications and ethical considerations are thoroughly discussed.",
            "The proposed evaluation method and future directions are well-thought-out and scientifically sound.",
            "The case study provides a concrete, detailed example of the algorithm's application to a real-world problem.",
            "The response is creative and innovative while maintaining scientific plausibility.",
            "The response is well-structured, addressing all required points comprehensively within the specified word limit.",
            "Each section adheres to the specified word count range."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
