import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        music_elements = [
            {
                "genre1": "Jazz",
                "genre2": "Classical",
                "musical_element": "harmony",
                "cognitive_aspect": "emotional response"
            },
            {
                "genre1": "Electronic",
                "genre2": "Folk",
                "musical_element": "rhythm",
                "cognitive_aspect": "attention and engagement"
            },
            {
                "genre1": "Hip-hop",
                "genre2": "Baroque",
                "musical_element": "melody",
                "cognitive_aspect": "memory and recall"
            },
            {
                "genre1": "Rock",
                "genre2": "Minimalism",
                "musical_element": "texture",
                "cognitive_aspect": "spatial perception"
            }
        ]
        return {
            "1": random.choice(music_elements),
            "2": random.choice(music_elements)
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system that generates a novel musical style by combining elements from {t['genre1']} and {t['genre2']}, with a focus on {t['musical_element']}. Then, analyze its output in terms of music theory and its potential impact on {t['cognitive_aspect']}. Your response should include the following sections:

1. AI System Architecture (300-350 words):
   a) Describe the key components of your AI music style generator and how they interact.
   b) Explain how your system analyzes and combines elements from the two specified genres.
   c) Detail how the system focuses on the specified musical element in its generation process.
   d) Include a high-level diagram or pseudocode representing a key process in your system.

2. Music Theory Integration (250-300 words):
   a) Explain how your system incorporates music theory principles in its generation process.
   b) Describe how it maintains musical coherence while creating a novel style.
   c) Discuss any challenges in combining potentially disparate musical elements and how your system addresses them.

3. Generated Style Analysis (250-300 words):
   a) Describe the key characteristics of the novel musical style generated by your AI system.
   b) Analyze how elements from each source genre are manifested in the new style.
   c) Explain how the focus on the specified musical element shapes the overall style.

4. Cognitive Impact Assessment (200-250 words):
   a) Analyze the potential impact of the generated musical style on the specified cognitive aspect.
   b) Discuss how this impact might differ from that of the source genres.
   c) Propose an experiment to measure the cognitive effects of the new musical style.

5. Creative Evaluation (200-250 words):
   a) Propose criteria for evaluating the creativity and novelty of the AI-generated musical style.
   b) Discuss how these criteria balance between musical innovation and listener accessibility.
   c) Explain how you would compare the AI's output to human-created fusion genres.

6. Ethical Considerations and Future Directions (150-200 words):
   a) Discuss potential ethical implications of AI-generated musical styles on the music industry and cultural expression.
   b) Address concerns about appropriation or dilution of cultural musical traditions.
   c) Propose two potential extensions or applications of your AI system in music education or therapy.

Ensure your response demonstrates a deep understanding of music theory, artificial intelligence, and cognitive science. Use appropriate technical terminology and provide clear explanations for complex concepts. Be innovative in your approach while maintaining scientific and artistic plausibility.

Format your response with clear headings for each section and use numbered or bulleted lists where appropriate. Your total response should be between 1350-1650 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a deep understanding of music theory, artificial intelligence, and cognitive science.",
            "The AI system design effectively combines elements from the specified genres and focuses on the given musical element.",
            "The analysis of the generated style is thorough and considers both musical and cognitive aspects.",
            "The proposed evaluation criteria and experiments are well-reasoned and appropriate.",
            "Ethical considerations are thoughtfully addressed.",
            "The response is innovative while maintaining scientific and artistic plausibility.",
            "The writing is clear, well-structured, and adheres to the specified word count and format."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
