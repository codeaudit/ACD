import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        musical_elements = [
            "harmony",
            "rhythm",
            "melody",
            "timbre"
        ]
        mathematical_concepts = [
            "fractals",
            "cellular automata",
            "Markov chains",
            "neural networks"
        ]
        music_genres = [
            "classical",
            "jazz",
            "electronic",
            "world music"
        ]
        
        tasks = {
            "1": {
                "musical_element": random.choice(musical_elements),
                "mathematical_concept": random.choice(mathematical_concepts),
                "music_genre": random.choice(music_genres)
            },
            "2": {
                "musical_element": random.choice(musical_elements),
                "mathematical_concept": random.choice(mathematical_concepts),
                "music_genre": random.choice(music_genres)
            }
        }
        return tasks

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system for algorithmic music composition that focuses on {t['musical_element']} using {t['mathematical_concept']} as its primary mathematical foundation. The system should be capable of generating music in the {t['music_genre']} genre. Provide your response in the following format:

1. System Architecture (250-300 words):
   a) Describe the key components of your AI music composition system.
   b) Explain how {t['mathematical_concept']} is integrated into the composition process.
   c) Detail how the system generates and manipulates {t['musical_element']}.
   d) Discuss how the system incorporates the stylistic elements of {t['music_genre']}.

2. Mathematical Framework (200-250 words):
   a) Explain the mathematical principles behind {t['mathematical_concept']} and their relevance to music composition.
   b) Provide at least one mathematical formula or algorithm central to your system's operation.
   c) Describe how this mathematical approach enhances the creative process in music composition.

3. Music Theory Integration (200-250 words):
   a) Discuss how your system incorporates fundamental music theory principles.
   b) Explain how it handles {t['musical_element']} within the context of {t['music_genre']}.
   c) Describe any novel approaches your system takes in applying music theory to algorithmic composition.

4. Creative Process and Output (200-250 words):
   a) Explain how your system balances algorithmic generation with musical creativity and originality.
   b) Describe the expected characteristics of the music produced by your system.
   c) Discuss how human composers might interact with or utilize your system in their work.

5. Evaluation and Analysis (150-200 words):
   a) Propose a method for evaluating the quality and creativity of the music generated by your system.
   b) Discuss potential biases or limitations in your system's compositional output.
   c) Suggest how these limitations might be addressed in future iterations.

6. Implications and Future Directions (200-250 words):
   a) Discuss the potential impact of your system on the music industry and compositional practices.
   b) Explore ethical considerations related to AI-generated music and authorship.
   c) Propose two potential applications or extensions of your system in other domains or genres.

Ensure your response demonstrates a deep understanding of music theory, the chosen mathematical concept, and AI technologies. Be innovative in your approach while maintaining scientific and artistic plausibility. Use appropriate technical terminology and provide clear explanations for complex concepts.

Format your response with clear headings for each section. Your total response should be between 1200-1500 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response demonstrates a deep understanding of {t['musical_element']} and how it can be generated and manipulated using {t['mathematical_concept']}",
            f"The system architecture effectively incorporates the stylistic elements of {t['music_genre']} and explains how they are generated",
            "The mathematical framework is well-explained and includes at least one relevant formula or algorithm",
            "The response shows creative and interdisciplinary thinking in combining music theory, mathematics, and AI",
            "The implications and future directions are thoughtfully explored and relevant to the proposed system"
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
