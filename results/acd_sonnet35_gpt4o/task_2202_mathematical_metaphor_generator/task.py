import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        math_concepts = [
            {
                'concept': 'Topology',
                'everyday_domain': 'Clothing',
                'complexity': 'High'
            },
            {
                'concept': 'Fractals',
                'everyday_domain': 'Nature',
                'complexity': 'Medium'
            }
        ]
        return {str(i+1): task for i, task in enumerate(math_concepts)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a language model capable of generating and interpreting metaphors that explain the mathematical concept of {t['concept']} using everyday objects or phenomena from the domain of {t['everyday_domain']}. Your response should include:

1. Model Architecture (250-300 words):
   a) Describe the overall architecture of your language model.
   b) Explain how it integrates knowledge of both mathematics and everyday concepts.
   c) Discuss any novel features that enable metaphor generation and interpretation.
   d) Include a diagram or pseudo-code snippet illustrating a key component of your model.

2. Mathematical Concept Analysis (200-250 words):
   a) Provide a brief explanation of the mathematical concept {t['concept']}.
   b) Identify key properties or aspects of this concept that could be mapped to metaphors.
   c) Discuss any challenges in representing this concept through metaphors.

3. Metaphor Generation Process (200-250 words):
   a) Describe the step-by-step process your model uses to generate metaphors.
   b) Explain how it selects relevant features from both the mathematical and everyday domains.
   c) Discuss how your model ensures the generated metaphors are both accurate and intuitive.

4. Example Metaphors (200-250 words):
   a) Provide two example metaphors generated by your model to explain {t['concept']} using elements from {t['everyday_domain']}.
   b) Analyze these metaphors, explaining how they capture key aspects of the mathematical concept.
   c) Discuss any limitations or potential misunderstandings these metaphors might introduce.

5. Reverse Process (150-200 words):
   a) Explain how your model could interpret a given metaphor to extract the underlying mathematical concept.
   b) Provide an example of this reverse process using one of the metaphors from section 4.

6. Evaluation and Potential Applications (200-250 words):
   a) Propose criteria for evaluating the quality and effectiveness of the generated metaphors.
   b) Discuss potential applications of your model in mathematics education or scientific communication.
   c) Consider any ethical implications or potential misuses of such a system.

Ensure your response demonstrates a deep understanding of both the mathematical concept and the principles of natural language processing and metaphor generation. Be creative in your model design while maintaining scientific plausibility. Use appropriate technical terminology from both fields and provide clear explanations where necessary.

Your metaphors should be of {t['complexity']} complexity, reflecting the depth of the mathematical concept while remaining accessible through the everyday domain.

Format your response with clear headings for each section, numbered as above. Include the word count for each section in parentheses at the end of the section. Your total response should be between 1200-1500 words.

Note: Generic or superficial responses that do not demonstrate a deep understanding of both the mathematical concept and natural language processing principles will not be considered successful."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The model architecture effectively integrates knowledge of both mathematics and everyday concepts, with clear explanation of novel features for metaphor generation and interpretation.",
            f"The explanation of {t['concept']} is accurate, identifies key properties for metaphor mapping, and discusses challenges in metaphor representation.",
            "The metaphor generation process is well-defined, with a clear step-by-step explanation and consideration for both accuracy and intuitiveness.",
            f"The example metaphors effectively explain {t['concept']} using elements from {t['everyday_domain']}, with appropriate complexity level ({t['complexity']}).",
            "The reverse process for interpreting metaphors is clearly explained and demonstrated with a concrete example.",
            "The evaluation criteria and potential applications are thoughtfully considered, including ethical implications.",
            "The response demonstrates creativity, interdisciplinary knowledge integration, and clear articulation of complex concepts, avoiding generic or superficial explanations.",
            "The response adheres to the specified format and word count requirements."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
