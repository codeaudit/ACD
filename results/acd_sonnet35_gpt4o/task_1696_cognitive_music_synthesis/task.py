import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        cognitive_architectures = [
            "ACT-R (Adaptive Control of Thought-Rational)",
            "SOAR (State, Operator, and Result)",
            "CLARION (Connectionist Learning with Adaptive Rule Induction ON-line)",
            "LIDA (Learning Intelligent Distribution Agent)"
        ]
        musical_elements = [
            "Melody",
            "Harmony",
            "Rhythm",
            "Timbre"
        ]
        musical_genres = [
            "Classical",
            "Jazz",
            "Electronic",
            "Folk"
        ]
        return {
            "1": {
                "cognitive_architecture": random.choice(cognitive_architectures),
                "musical_element": random.choice(musical_elements),
                "musical_genre": random.choice(musical_genres)
            },
            "2": {
                "cognitive_architecture": random.choice(cognitive_architectures),
                "musical_element": random.choice(musical_elements),
                "musical_genre": random.choice(musical_genres)
            }
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"Design and analyze a music generation system based on the cognitive architecture {t['cognitive_architecture']}, focusing on the musical element of {t['musical_element']} within the {t['musical_genre']} genre. Your response should include:\n\n1. Cognitive Architecture Analysis (200-250 words):\n   a) Briefly explain the key principles and mechanisms of the given cognitive architecture.\n   b) Discuss how this architecture models human cognition and decision-making processes.\n   c) Hypothesize how this cognitive model might influence music perception and creation.\n\n2. Music Generation System Design (250-300 words):\n   a) Propose a music generation system that incorporates the principles of the given cognitive architecture.\n   b) Explain how your system models the specified musical element within the chosen genre.\n   c) Describe the key components and processes of your system, including any algorithms or data structures.\n   d) Provide a high-level diagram or pseudocode representing your system's architecture.\n\n3. Musical Output Analysis (200-250 words):\n   a) Describe a hypothetical musical piece generated by your system, focusing on the specified musical element.\n   b) Explain how the cognitive architecture influences the structure and characteristics of the generated music.\n   c) Compare your system's output to human-composed music in the same genre, highlighting similarities and differences.\n\n4. Cognitive-Musical Integration (200-250 words):\n   a) Analyze how the cognitive architecture's principles enhance or constrain the musical creativity of your system.\n   b) Discuss any novel insights about music composition or perception that emerge from this integration.\n   c) Propose an experiment to test how human listeners perceive and respond to music generated by your system.\n\n5. Limitations and Extensions (150-200 words):\n   a) Identify potential limitations of your cognitive music generation system.\n   b) Suggest improvements or extensions to address these limitations.\n   c) Propose how your system could be adapted to model other musical elements or genres.\n\n6. Interdisciplinary Implications (150-200 words):\n   a) Discuss the potential implications of your system for our understanding of human cognition and creativity.\n   b) Explore how this approach might inform or be applied to other creative domains beyond music.\n   c) Consider any ethical considerations related to AI-generated art based on cognitive architectures.\n\nEnsure your response demonstrates a deep understanding of both the specified cognitive architecture and music theory. Be creative and innovative in your approach while maintaining scientific and theoretical plausibility. Use appropriate technical terminology from both cognitive science and musicology, providing clear explanations where necessary.\n\nFormat your response with clear headings for each section. Your total response should be between 1150-1450 words."

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a comprehensive understanding of the specified cognitive architecture and its potential application to music generation.",
            "The proposed music generation system effectively integrates principles from the cognitive architecture with musical theory and composition techniques.",
            "The analysis of the hypothetical musical output shows a clear link between the cognitive architecture and the generated music's characteristics.",
            "The discussion of cognitive-musical integration reveals novel insights and thoughtful experimental proposals.",
            "Limitations and potential extensions of the system are identified and addressed with creative and plausible solutions.",
            "The exploration of interdisciplinary implications demonstrates a broad understanding of the potential impact on cognition, creativity, and ethics."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
