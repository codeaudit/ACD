import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        cognitive_states = [
            {
                'state': 'Focused attention',
                'brain_region': 'Prefrontal cortex',
                'art_style': 'Minimalism'
            },
            {
                'state': 'Emotional processing',
                'brain_region': 'Amygdala',
                'art_style': 'Abstract Expressionism'
            }
        ]
        return {str(i+1): state for i, state in enumerate(cognitive_states)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system capable of bidirectionally translating between brain activity patterns and abstract art, focusing on the cognitive state of {t['state']} primarily associated with the {t['brain_region']}. Then, use your system to generate and analyze an artwork in the style of {t['art_style']} based on this cognitive state. Your response should include:

1. System Architecture (300-350 words):
   a) Describe the key components of your AI system for bidirectional translation between brain activity and art.
   b) Explain how your system processes and represents neural data from the specified brain region.
   c) Detail how your system generates and interprets abstract art in the given style.
   d) Discuss any novel algorithms or techniques used in your system.
   e) Include a diagram or flowchart of your system architecture (described in words).

2. Neural-to-Art Translation Process (250-300 words):
   a) Provide a step-by-step explanation of how your system translates neural activity patterns to abstract art.
   b) Describe how your system accounts for the specific cognitive state and brain region in the artistic output.
   c) Explain how your system ensures the generated art aligns with the specified art style.
   d) Discuss any challenges in this translation process and how your system addresses them.

3. Art-to-Neural Translation Process (250-300 words):
   a) Explain how your system interprets abstract art to infer potential neural activity patterns.
   b) Describe the method your system uses to map artistic elements to brain activity.
   c) Discuss how your system accounts for individual differences in brain structure and function.
   d) Address potential limitations or assumptions in this reverse translation process.

4. Generated Artwork Analysis (200-250 words):
   a) Describe an abstract artwork generated by your system for the given cognitive state.
   b) Analyze how specific elements of the artwork reflect the neural activity and cognitive state.
   c) Explain how the artwork embodies characteristics of the specified art style.
   d) Discuss any unexpected or emergent properties in the generated artwork.

5. Validation and Evaluation (200-250 words):
   a) Propose methods to validate the accuracy of your system's bidirectional translations.
   b) Suggest experiments to test the system's performance across different cognitive states and art styles.
   c) Discuss potential applications of your system in neuroscience research or art therapy.
   d) Address ethical considerations in using AI to interpret and generate art based on neural activity.

6. Future Directions and Implications (150-200 words):
   a) Suggest two potential improvements or extensions to your system.
   b) Discuss how this technology might impact our understanding of consciousness and creativity.
   c) Explore potential societal implications of machines that can 'read' and 'create' art from thoughts.

Ensure your response demonstrates a deep understanding of neuroscience, artificial intelligence, and art theory. Use appropriate technical terminology and provide clear explanations for complex concepts. Be innovative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section, numbered as above. Your total response should be between 1350-1650 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a deep understanding of neuroscience, artificial intelligence, and art theory.",
            "The system architecture is well-explained and addresses both neural-to-art and art-to-neural translations.",
            "The translation processes are clearly described and account for the specific cognitive state, brain region, and art style.",
            "The generated artwork analysis shows creativity and insight into the relationship between neural activity and artistic expression.",
            "The validation methods and future directions are thoughtful and demonstrate an understanding of the broader implications of the technology."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
