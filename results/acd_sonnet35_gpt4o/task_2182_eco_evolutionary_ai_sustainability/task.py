import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        environmental_challenges = [
            {
                "challenge": "Climate change mitigation",
                "ecosystem": "Coral reefs",
                "evolutionary_principle": "Adaptive radiation"
            },
            {
                "challenge": "Biodiversity loss prevention",
                "ecosystem": "Tropical rainforests",
                "evolutionary_principle": "Coevolution"
            },
            {
                "challenge": "Sustainable agriculture",
                "ecosystem": "Grasslands",
                "evolutionary_principle": "Niche construction"
            },
            {
                "challenge": "Ocean pollution reduction",
                "ecosystem": "Marine ecosystems",
                "evolutionary_principle": "Genetic drift"
            }
        ]
        return {str(i+1): challenge for i, challenge in enumerate(random.sample(environmental_challenges, 2))}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system that simulates eco-evolutionary dynamics to develop sustainable solutions for the global environmental challenge of {t['challenge']}. Focus on the {t['ecosystem']} ecosystem and incorporate the evolutionary principle of {t['evolutionary_principle']} in your design.

Your response should include the following sections:

1. System Architecture (300-350 words):
   a) Describe the key components of your AI system and how they interact.
   b) Explain how your system models eco-evolutionary dynamics.
   c) Detail how it incorporates the specified evolutionary principle.
   d) Discuss how the system will generate and evaluate sustainable solutions.

2. Eco-Evolutionary Model (250-300 words):
   a) Describe the mathematical or computational model used to simulate eco-evolutionary dynamics in the specified ecosystem.
   b) Explain how your model captures the interplay between ecological and evolutionary processes.
   c) Discuss how the model incorporates environmental factors relevant to the challenge.
   d) Provide a simple mathematical equation or pseudocode (about 5-10 lines) illustrating a key aspect of your model.

3. AI Algorithm Design (250-300 words):
   a) Propose a machine learning algorithm for generating and optimizing sustainable solutions.
   b) Explain how this algorithm leverages the eco-evolutionary model.
   c) Describe how the algorithm ensures the feasibility and effectiveness of proposed solutions.
   d) Include a simple pseudocode (about 10-15 lines) outlining the main steps of your algorithm.

4. Sustainability Metrics (200-250 words):
   a) Define at least three key metrics for assessing the sustainability of solutions generated by your system.
   b) Explain how these metrics integrate ecological, evolutionary, and socio-economic factors.
   c) Provide a specific example of how each metric would be calculated or measured.
   d) Discuss any trade-offs or conflicts between different sustainability goals and how your system addresses them.

5. Example Solution (200-250 words):
   a) Provide a detailed description of a potential sustainable solution generated by your system for the specified challenge.
   b) Explain how this solution reflects eco-evolutionary principles and addresses sustainability metrics.
   c) Discuss the potential impact of this solution on the ecosystem and relevant stakeholders.

6. Ethical Considerations and Limitations (150-200 words):
   a) Discuss potential ethical implications of using AI for environmental management and policy-making.
   b) Address limitations of your approach and potential unintended consequences.
   c) Propose guidelines for responsible development and application of your system.

Ensure your response demonstrates a deep understanding of evolutionary biology, artificial intelligence, and environmental science. Use appropriate technical terminology and provide clear explanations for complex concepts. Be innovative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section. Your total response should be between 1350-1650 words.
"""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response includes a coherent design for an AI system that addresses {t['challenge']} in {t['ecosystem']} ecosystems",
            f"The system architecture clearly incorporates the evolutionary principle of {t['evolutionary_principle']} in a meaningful way",
            "The eco-evolutionary model is well-explained, scientifically plausible, and includes a relevant mathematical equation or pseudocode",
            "The AI algorithm design is innovative, appropriate for the task, and includes a pseudocode outline of the main steps",
            "At least three sustainability metrics are defined, explained, and accompanied by specific calculation examples",
            "The example solution is detailed, demonstrates the system's potential, and addresses its impact on the ecosystem and stakeholders",
            "Ethical considerations and limitations are thoughtfully addressed with proposed guidelines for responsible development",
            "The response demonstrates deep understanding of evolutionary biology, AI, and environmental science through appropriate use of technical terminology and clear explanations",
            "The writing is clear, well-structured, adheres to the specified format, and falls within the 1350-1650 word count range"
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
