import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        cognitive_processes = [
            "Divergent thinking",
            "Conceptual blending",
            "Analogical reasoning",
            "Insight problem solving"
        ]
        quantum_principles = [
            "Superposition",
            "Entanglement",
            "Quantum tunneling",
            "Quantum annealing"
        ]
        problem_domains = [
            "Sustainable urban planning",
            "Novel drug discovery",
            "Climate change mitigation",
            "Space exploration technology"
        ]
        return {
            "1": {
                "cognitive_process": random.choice(cognitive_processes),
                "quantum_principle": random.choice(quantum_principles),
                "problem_domain": random.choice(problem_domains)
            },
            "2": {
                "cognitive_process": random.choice(cognitive_processes),
                "quantum_principle": random.choice(quantum_principles),
                "problem_domain": random.choice(problem_domains)
            }
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design a quantum-inspired algorithm to simulate the creative cognitive process of {t['cognitive_process']}, leveraging the quantum principle of {t['quantum_principle']}. Then, use your algorithm to generate a novel solution in the problem domain of {t['problem_domain']}. Your response should include:

1. Algorithm Design (350-400 words):
   a) Describe the key components and functioning of your quantum-inspired algorithm.
   b) Explain how it simulates the specified cognitive process, citing relevant cognitive science theories.
   c) Detail how the chosen quantum principle is incorporated into the algorithm, explaining any quantum computing concepts used.
   d) Provide a high-level pseudocode or flow diagram of your algorithm.
   e) Include a visual representation (in ASCII art or text-based diagram) of your algorithm's structure or process flow.

2. Quantum-Cognitive Interface (250-300 words):
   a) Analyze how your algorithm bridges quantum principles with cognitive processes.
   b) Discuss any novel insights gained from this quantum-cognitive integration.
   c) Address potential challenges in implementing your algorithm for real-world applications.
   d) Explain how your approach differs from classical computational models of cognition.

3. Problem Solution Generation (300-350 words):
   a) Apply your algorithm to generate a novel solution in the specified problem domain.
   b) Describe the step-by-step process of how your algorithm produced this solution.
   c) Explain how the solution demonstrates creativity and innovation.
   d) Discuss how the quantum-inspired approach led to insights that might not have been achieved with classical methods.

4. Evaluation and Analysis (250-300 words):
   a) Propose metrics to evaluate the creativity and effectiveness of solutions generated by your algorithm.
   b) Compare the advantages of your approach to traditional methods in the field.
   c) Discuss potential limitations or biases in your algorithm.
   d) Provide a time complexity analysis of your algorithm, comparing it to classical alternatives if applicable.

5. Implications and Future Directions (200-250 words):
   a) Examine the potential impact of your algorithm on creativity research and problem-solving methodologies.
   b) Suggest two potential research directions that could enhance the capabilities of your approach.
   c) Discuss ethical considerations related to the use of quantum-inspired algorithms for simulating human cognitive processes.
   d) Speculate on how advancements in quantum computing hardware might affect the implementation of your algorithm.

Ensure your response demonstrates a deep understanding of both quantum computing principles and cognitive science. Use appropriate terminology from both fields and provide clear explanations for complex concepts. Be innovative in your approach while maintaining scientific plausibility. Your total response should be between 1350-1600 words.

Format your response with clear headings for each section and number your paragraphs within each section."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response demonstrates a clear understanding of {t['cognitive_process']} and how it relates to creative cognition, citing relevant cognitive science theories.",
            f"The algorithm effectively incorporates the quantum principle of {t['quantum_principle']} in a meaningful way, with clear explanations of quantum computing concepts used.",
            f"The solution generated for {t['problem_domain']} is novel, relevant, and demonstrates creative problem-solving that leverages the quantum-inspired approach.",
            "The quantum-cognitive interface is well-explained and shows innovative thinking in combining these fields, clearly differentiating from classical computational models.",
            "The response includes a visual representation (ASCII art or text-based diagram) of the algorithm's structure or process flow.",
            "The evaluation and analysis section provides thoughtful metrics, comparisons to traditional methods, and includes a time complexity analysis.",
            "The implications and future directions discussed are insightful, addressing ethical considerations and potential impacts of quantum computing advancements.",
            "The response demonstrates interdisciplinary knowledge application, combining concepts from quantum computing, cognitive science, and the specific problem domain throughout all sections."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
