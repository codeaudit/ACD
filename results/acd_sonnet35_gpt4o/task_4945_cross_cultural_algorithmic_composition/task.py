import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        tasks = [
            {
                "musical_traditions": ["West African polyrhythms", "Indian raga", "Western classical harmony"],
                "mathematical_concept": "Fibonacci sequence",
                "cultural_context": "Global climate change awareness"
            },
            {
                "musical_traditions": ["Gamelan music", "Middle Eastern maqam", "European folk melodies"],
                "mathematical_concept": "Fractal geometry",
                "cultural_context": "Intercultural dialogue promotion"
            }
        ]
        return {str(i+1): task for i, task in enumerate(tasks)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system for algorithmic music composition that integrates the following musical traditions: {', '.join(t['musical_traditions'])}. Your system should use the mathematical concept of {t['mathematical_concept']} and address the cultural context of {t['cultural_context']}. Provide a comprehensive response covering the following aspects:

1. System Architecture (300-350 words):
   a) Describe the key components of your AI composition system.
   b) Explain how your system integrates the specified musical traditions.
   c) Detail how the {t['mathematical_concept']} is incorporated into the composition process.
   d) Discuss how cultural anthropology insights inform your system's design.

2. Musical Representation and Analysis (250-300 words):
   a) Explain how your system represents and analyzes the different musical traditions.
   b) Describe any novel data structures or algorithms used for musical pattern recognition.
   c) Discuss how your system identifies and preserves culturally significant musical elements.

3. Composition Algorithm (250-300 words):
   a) Detail the step-by-step process of how your AI generates a composition.
   b) Explain how the {t['mathematical_concept']} guides or constrains the composition.
   c) Describe how your algorithm balances between adhering to traditional forms and creating novel musical expressions.

4. Cultural Context Integration (200-250 words):
   a) Explain how your system incorporates the cultural context of {t['cultural_context']} into the composition process.
   b) Discuss any ethical considerations in using diverse cultural musical elements.
   c) Describe how your system ensures cultural sensitivity and avoids inappropriate appropriation.

5. Output Analysis (200-250 words):
   a) Provide a hypothetical example of a composition generated by your system, describing its key features.
   b) Analyze how this composition reflects the integration of different musical traditions and mathematical concepts.
   c) Discuss how the composition addresses the specified cultural context.

6. Evaluation and Future Work (150-200 words):
   a) Propose metrics to evaluate the musical quality and cultural relevance of your system's compositions.
   b) Suggest two potential improvements or extensions to your system.
   c) Discuss the potential impact of your system on music creation and cross-cultural understanding.

Ensure your response demonstrates a deep understanding of music theory, mathematical modeling, and cultural anthropology. Use appropriate technical terminology and provide clear explanations for complex concepts. Be innovative in your approach while maintaining musical and cultural authenticity. Format your response with clear headings for each section, numbered as above. Your total response should be between 1350-1650 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            f"The response must address the integration of {', '.join(t['musical_traditions'])}.",
            f"The system should incorporate the mathematical concept of {t['mathematical_concept']}.",
            f"The cultural context of {t['cultural_context']} must be addressed in the composition process.",
            "The system architecture should be clearly described and integrate musical, mathematical, and cultural elements.",
            "The composition algorithm should be well-explained and demonstrate novelty.",
            "The response should show a deep understanding of music theory, mathematical modeling, and cultural anthropology.",
            "The proposed evaluation metrics should be relevant and well-thought-out.",
            "The response should follow the specified format with clear headings for each section."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
