import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        tasks = [
            {
                'languages': ['Spanish', 'English', 'Mandarin Chinese'],
                'context': 'Business negotiation',
                'emotional_state': 'Stress'
            },
            {
                'languages': ['Hindi', 'English', 'French'],
                'context': 'Family gathering',
                'emotional_state': 'Joy'
            }
        ]
        return {str(i+1): task for i, task in enumerate(tasks)}

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system that simulates and analyzes the neural processes involved in multilingual code-switching between {', '.join(t['languages'])}. Then, use your system to generate and interpret a complex multilingual conversation in the context of a {t['context']} where the speakers are experiencing {t['emotional_state']}. Your response should include:

1. Neural Simulation Architecture (300-350 words):
   a) Describe the key components of your AI system for simulating multilingual neural processes.
   b) Explain how your system models the rapid language switches in the brain.
   c) Detail how emotional states are integrated into the language processing model.
   d) Discuss any novel approaches in your system design.
   e) Include a simple diagram of your neural simulation architecture using ASCII characters.

2. Code-Switching Mechanism (250-300 words):
   a) Explain the theoretical basis for your code-switching simulation.
   b) Describe how your system determines when and why to switch between languages.
   c) Discuss how your model handles semantic and syntactic differences between the languages.

3. Conversation Generation (300-350 words):
   a) Provide a sample multilingual conversation generated by your system (at least 150 words).
   b) Explain how the conversation reflects the given context and emotional state.
   c) Highlight specific instances of code-switching and explain the neural processes involved.

4. Interpretation and Analysis (250-300 words):
   a) Analyze the generated conversation, explaining the patterns of code-switching.
   b) Discuss how the emotional state influences language choice and switching.
   c) Compare your AI's code-switching patterns to those observed in human multilingual speakers.

5. Implications and Applications (200-250 words):
   a) Discuss the potential implications of your system for understanding multilingualism and cognition.
   b) Propose practical applications in fields such as language education, translation technology, or cognitive therapy.
   c) Address ethical considerations related to simulating and analyzing multilingual neural processes.

Ensure your response demonstrates a deep understanding of neurolinguistics, AI systems, and cognitive science. Use appropriate terminology and provide clear explanations for complex concepts. Be creative and innovative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section. Your total response should be between 1300-1550 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a deep understanding of neurolinguistics, AI systems, and cognitive science.",
            "The neural simulation architecture is well-designed and plausibly integrates language processing and emotional states.",
            "The code-switching mechanism is theoretically sound and reflects current understanding of multilingual cognition.",
            f"The generated conversation accurately reflects code-switching between {', '.join(t['languages'])} in the context of a {t['context']} with an emotional state of {t['emotional_state']}.",
            "The interpretation and analysis of the generated conversation is insightful and well-reasoned.",
            "The discussion of implications and applications is thoughtful and considers ethical aspects.",
            "The response is creative and innovative while maintaining scientific plausibility."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
