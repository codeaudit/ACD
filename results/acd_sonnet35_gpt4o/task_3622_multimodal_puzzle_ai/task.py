import random

class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        puzzle_types = ['visual-linguistic', 'logical-spatial', 'narrative-mathematical']
        complexity_levels = ['moderate', 'high', 'very high']
        return {
            "1": {"puzzle_type": random.choice(puzzle_types), "complexity": random.choice(complexity_levels)},
            "2": {"puzzle_type": random.choice(puzzle_types), "complexity": random.choice(complexity_levels)}
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        return f"""Design an AI system capable of generating and solving complex, multi-modal puzzles that require human-like reasoning and creativity. Then, apply your system to create and solve a {t['complexity']} complexity {t['puzzle_type']} puzzle. Your response should include the following sections:

1. AI System Architecture (300-350 words):
   a) Describe the key components of your AI system for generating and solving multi-modal puzzles.
   b) Explain how your system integrates different types of reasoning (e.g., visual, linguistic, logical) required for multi-modal puzzles.
   c) Discuss any novel AI techniques or algorithms used in your system.
   d) Include a high-level diagram or pseudocode illustrating the system's architecture (describe it textually).

2. Puzzle Generation Process (250-300 words):
   a) Explain how your AI system generates {t['puzzle_type']} puzzles.
   b) Describe the key parameters and variables considered in the puzzle creation process.
   c) Discuss how your system ensures the puzzles are solvable and of the specified {t['complexity']} complexity level.

3. Reasoning and Problem-Solving Approach (250-300 words):
   a) Detail how your AI system approaches solving the puzzles it generates.
   b) Explain the different reasoning strategies employed for {t['puzzle_type']} puzzles.
   c) Describe how your system handles ambiguity or multiple possible solutions.
   d) Compare your AI system's approach to existing puzzle-solving algorithms or human strategies.

4. Example Puzzle (300-350 words):
   a) Present a {t['complexity']} complexity {t['puzzle_type']} puzzle generated by your AI system. The puzzle should incorporate at least two different modalities (e.g., visual and linguistic elements).
   b) Provide a step-by-step explanation of how your AI system would solve this puzzle.
   c) Discuss any challenges or interesting aspects of this particular puzzle.

5. Evaluation and Validation (200-250 words):
   a) Propose a method to evaluate the creativity and complexity of the puzzles generated by your AI system.
   b) Describe how you would validate the system's puzzle-solving capabilities against human performance.
   c) Discuss potential biases or limitations in your system's puzzle generation or solving processes.

6. Applications and Implications (150-200 words):
   a) Discuss potential applications of your AI system in fields such as education, cognitive science, or entertainment.
   b) Explore the implications of an AI system capable of human-like puzzle creation and solving.
   c) Propose ethical guidelines for the development and use of such systems.

7. Potential Failure Modes (150-200 words):
   a) Identify and explain at least three potential failure modes of your AI system.
   b) Discuss how these failure modes might manifest in puzzle generation or solving.
   c) Propose strategies to mitigate or address these potential failures.

8. Future Improvements (100-150 words):
   a) Suggest at least two potential improvements or extensions to your AI system.
   b) Briefly explain how these improvements would enhance the system's capabilities or address current limitations.

Ensure your response demonstrates a deep understanding of artificial intelligence, cognitive science, and puzzle design principles. Use appropriate technical terminology and provide clear explanations for complex concepts. Be creative in your approach while maintaining scientific plausibility.

Format your response with clear headings for each section, numbered as above. Use bullet points or sub-numbering where appropriate. Your total response should be between 1700-2100 words."""

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The response demonstrates a deep understanding of AI, cognitive science, and puzzle design principles.",
            "The AI system architecture is well-designed and integrates multiple types of reasoning.",
            "The puzzle generation process is clearly explained and considers appropriate parameters.",
            "The reasoning and problem-solving approach is comprehensive, suitable for the specified puzzle type, and compared to existing methods.",
            "The example puzzle is of appropriate complexity, incorporates at least two modalities, and the solution process is well-explained.",
            "The evaluation and validation methods are well-thought-out and address potential biases.",
            "The applications and implications are insightful and consider ethical aspects.",
            "Potential failure modes are identified and discussed with appropriate mitigation strategies.",
            "Future improvements are suggested and their potential impact is explained.",
            "The response is creative while maintaining scientific plausibility.",
            "All sections are complete and adhere to the word count guidelines."
        ]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
