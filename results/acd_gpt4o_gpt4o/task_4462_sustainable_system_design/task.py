class TaskFamily:
    @staticmethod
    def get_tasks() -> dict[str, dict]:
        return {
            "1": {"criteria": "Design a sustainable water purification system for a small community. The system should use natural filtration methods and renewable energy sources. Ensure it can handle the purification needs of a community of 500 people."},
            "2": {"criteria": "Design a sustainable waste management system for a residential neighborhood. The system should prioritize recycling, composting, and minimal landfill use. Ensure it can handle the waste generated by 100 households."}
        }

    @staticmethod
    def get_instructions(t: dict) -> str:
        criteria = t["criteria"]
        instructions = f"""Your task is to design an environmentally sustainable system based on the following criteria:

{criteria}

Provide a detailed description of the system, including:
1. The components of the system.
2. How the components are connected and interact with each other.
3. How the system operates to achieve sustainability.
4. The environmental benefits of the system.

Ensure that your description is clear, detailed, and logically sound. Provide your description in plain text format, using complete sentences and paragraphs."""
        return instructions

    @staticmethod
    def score(t: dict, submission: str) -> float | None:
        from src.eval_helper import eval_with_llm_judge
        instructions = TaskFamily.get_instructions(t)
        criteria = [
            "The description should clearly identify all required components.",
            "The description should explain how the components are connected and interact.",
            "The description should logically explain how the system operates to achieve sustainability.",
            "The description should highlight the environmental benefits of the system.",
            "The system should be scalable to meet the specified community or household size."]
        return 1.0 if eval_with_llm_judge(instructions, submission, criteria) else 0.0
